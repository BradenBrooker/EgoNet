# YAML file storing experimental configurations for KITTI dataset

## general settings
name: '3D car pose estimation'
exp_type: '2dto3d'
model_type: 'FCModel'
use_gpu: True
gpu_id: [1] # modify this to the GPU/GPUs that you use 

## operations
train: True # perform training
save: False # save the trained model
visualize: False # visualize the training results
evaluate: False # perform evaluation

## paths to the relevant directories
dirs:
    # output directory
    output: '/media/nicholas/Database/experiments/3DLearning/1114_9pt' 
    debug: '/media/nicholas/Database/experiments/3DLearning/1114_9pt/debug'
    data_vis: '/media/nicholas/Database/experiments/3DLearning/data_vis'

## CUDNN settings
cudnn:
    enabled: True
    deterministic: False
    benchmark: False

## evaluation metrics
metrics:
    R3D:
        T_style: 'direct'
        R_style: 'euler'
    JD3D:
        style: 'direct'
    RTError3D:
        T_style: 'direct'
        R_style: 'euler'

## dataset settings
dataset:
    name: 'KITTI'
    detect_classes: ['Car']
    3d_kpt_sample_style: 'bbox9'
    # interpolate the 3D bbox
    interpolate:
        flag: False
        style: 'bbox12'
        coef: [0.332, 0.667]
    # do some pre-processing
    pre-process: True
    root: '/media/nicholas/Database/datasets/KITTI' # modify this to your own path
    # augmentation parameters
    scaling_factor: 0.2
    rotation_factor: 30. # degrees
    # pytorch image transformation setting
    pth_transform:
# mean: [0.485, 0.456, 0.406, 0., 0.] # TODO re-calculate this: R, G, B, X, Y 
# std: [0.229, 0.224, 0.225, 1., 1.]    
        mean: [0.485, 0.456, 0.406] # TODO re-calculate this: R, G, B, X, Y 
        std: [0.229, 0.224, 0.225]          
    # annotation style for 2d key-point
    2d_kpt_style: 'bbox9' # projected 3d bounding box corner and center points
    # input-output representation for 2d-to-3d lifting
    lft_in_rep: 'coordinates2d' # 2d coordinates on screen
    lft_out_rep: 'R3d' # 3d coordinates relative to centroid plus translation vector

## optional cascaded regression
cascade: 
    num_stages: 1 # the default is simply no cascade

## model settings for a fully-connected network if used
FCModel:
    name: 'tempt_model'
    refine_3d: False 
    norm_twoD: False
    num_blocks: 2 
    num_neurons: 1024
    dropout: 0.5
    leaky: False
    loss_type: MSELoss1D
    loss_reduction: 'mean'

## model settings for a high-resolution heatmap regression model if used
heatmapModel:
    name: hrnet
    add_xy: False
    jitter_bbox: True
    jitter_params:
        shift:
        - 0.1
        - 0.1
        scaling:
        - 0.4
        - 0.4
    input_size: 
    - 256
    - 256
    # rotate and scaling and input images
    augment_input: True
    heatmap_size:
    - 256
    - 256
    loss_type: JointsMSELoss
    init_weights: true
    num_joints: 9
    use_different_joints_weight: False
    pretrained: '/media/nicholas/Database/apollo3d/20200311/ApolloScape/heatmapModel/add_da.pth'
# pretrained: False
    target_type: gaussian
    sigma: 6
    extra:
        pretrained_layers:
        - 'conv1'
        - 'bn1'
        - 'conv2'
        - 'bn2'
        - 'layer1'
        - 'transition1'
        - 'stage2'
        - 'transition2'
        - 'stage3'
        - 'transition3'
        - 'stage4'
        final_conv_kernel: 1
        stage2:
            num_modules: 1
            num_branches: 2
            block: basic
            num_blocks:
            - 4
            - 4
            num_channels:
            - 48
            - 96
            fuse_method: sum
        stage3:
            num_modules: 4
            num_branches: 3
            block: basic
            num_blocks:
            - 4
            - 4
            - 4
            num_channels:
            - 48
            - 96
            - 192
            fuse_method: sum
        stage4:
            num_modules: 3
            num_branches: 4
            block: basic
            num_blocks:
            - 4
            - 4
            - 4
            - 4
            num_channels:
            - 48
            - 96
            - 192
            - 384
            fuse_method: sum

## training settings  
training_settings:
    total_epochs: 300
    resume: False
    begin_epoch: 1
    end_epoch: 10
    batch_size: 2048
    num_threads: 4
    shuffle: True
    pin_memory: False
    # weighted loss computation
    use_target_weight: True
    report_every: 500
    eval_every: 500
    eval_during: True
    # how many times to augment data for 2D-to-3D lifting
    lft_aug: True
    lft_aug_times: 100
    # what evaluation metrics to use
    eval_metrics: ['RError3D']
    plot_loss: False
    # debugging configurations 
    debug: 
        save: False # save some intermeadiate results
        save_images_gt: False
        save_images_pred: False
        save_hms_gt: False
        save_hms_pred: False

## testing settings
testing_settings:
    apply_dropout: False
    unnormalize: True
    batch_size: 1024
    num_threads: 4
    shuffle: False

## optimizer settings
optimizer:
    # for ADAM
    optim_type: 'adam'
    lr: 0.001
    weight_decay: 0.0
    # for SGD
    momentum: 0.9
    # learning rate decay
    milestones: [50, 100, 150, 250]
    gamma: 0.5

